/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package motion;

import Models.Project;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
import javax.swing.AbstractButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author josep
 */
public class InputProjectPage extends javax.swing.JInternalFrame {

    private CheckBoxAction checkBoxMap = new CheckBoxAction();
    private HashMap<String, Boolean> newCheckBoxMap = new HashMap();
    private CurrUser user;
    private HomePage homepage;
    private Project project;

    /**
     * Creates new form InputProjectPage
     */
    public InputProjectPage() {
        initComponents();
        this.setTitle("Create Project");

    }

    public InputProjectPage(HomePage homepage) {
        initComponents();
        this.homepage = homepage;
        this.setTitle("Create Project");
    }

    public InputProjectPage(HomePage homepage, Project project) {
        initComponents();
        this.homepage = homepage;
        this.project = project;
        this.setTitle("Update Project");
        updateProjInit();
    }

    private void updateProjInit() {
        edtTitle.setText(project.getTitle());
        cbType.setSelectedItem(project.getType());
        sdPriority.setValue(project.getPriority());
        Enumeration<AbstractButton> buttons = status.getElements();
        while (buttons.hasMoreElements()) {
            AbstractButton button = buttons.nextElement();
            if (button.getName().equals(project.getStatus())) {
                button.setSelected(true);
                break;
            }
        }
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String formattedDeadline = project.getDeadline().format(formatter);
        edtDate.setText(formattedDeadline);
        btnCreate.setText("Update");

        checkBoxMap.setProjectId(project.getId());
        checkBoxMap.getCheckBoxes();

        if (!checkBoxMap.getCheckBoxMap().isEmpty()) {

            for (Map.Entry<String, Boolean> entry : checkBoxMap.getCheckBoxMap().entrySet()) {
                String key = entry.getKey();
                Boolean value = entry.getValue();
                displayCheckBox(key, value);
                newCheckBoxMap.put(key, value);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        status = new javax.swing.ButtonGroup();
        dateChooser = new datechooser.DateChooser();
        pnRoot = new javax.swing.JPanel();
        edtTitle = new javax.swing.JTextField();
        tvTitle = new javax.swing.JLabel();
        tvType = new javax.swing.JLabel();
        tvPriority = new javax.swing.JLabel();
        tvStatus = new javax.swing.JLabel();
        cbType = new javax.swing.JComboBox<>();
        sdPriority = new javax.swing.JSlider();
        tvTitle4 = new javax.swing.JLabel();
        tvTitle5 = new javax.swing.JLabel();
        rbOngoing = new javax.swing.JRadioButton();
        rbCompleted = new javax.swing.JRadioButton();
        tvDeadline = new javax.swing.JLabel();
        edtDate = new javax.swing.JTextField();
        btnDate = new javax.swing.JButton();
        rbOverdue = new javax.swing.JRadioButton();
        btnCreate = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        pnChecklists = new javax.swing.JPanel();
        tvDeadline1 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        dateChooser.setForeground(new java.awt.Color(27, 24, 55));
        dateChooser.setDateFormat("yyyy-MM-dd");
        dateChooser.setTextRefernce(edtDate);

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(536, 600));

        pnRoot.setBackground(new java.awt.Color(27, 24, 55));
        pnRoot.setMaximumSize(new java.awt.Dimension(615, 336));
        pnRoot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnRootMouseClicked(evt);
            }
        });

        tvTitle.setForeground(new java.awt.Color(255, 255, 255));
        tvTitle.setText("Project Title");

        tvType.setForeground(new java.awt.Color(255, 255, 255));
        tvType.setText("Type");

        tvPriority.setForeground(new java.awt.Color(255, 255, 255));
        tvPriority.setText("Priority");

        tvStatus.setForeground(new java.awt.Color(255, 255, 255));
        tvStatus.setText("Status");

        cbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Business", "Commission", "Work", "Education", "Self-Improvement" }));

        sdPriority.setMajorTickSpacing(2);
        sdPriority.setMaximum(10);
        sdPriority.setMinorTickSpacing(1);

        tvTitle4.setForeground(new java.awt.Color(255, 255, 255));
        tvTitle4.setText("1");

        tvTitle5.setForeground(new java.awt.Color(255, 255, 255));
        tvTitle5.setText("10");

        status.add(rbOngoing);
        rbOngoing.setForeground(new java.awt.Color(255, 255, 255));
        rbOngoing.setSelected(true);
        rbOngoing.setText("Ongoing");
        rbOngoing.setName("Ongoing"); // NOI18N
        rbOngoing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOngoingActionPerformed(evt);
            }
        });

        status.add(rbCompleted);
        rbCompleted.setForeground(new java.awt.Color(255, 255, 255));
        rbCompleted.setText("Completed");
        rbCompleted.setName("Completed"); // NOI18N
        rbCompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCompletedActionPerformed(evt);
            }
        });

        tvDeadline.setForeground(new java.awt.Color(255, 255, 255));
        tvDeadline.setText("Checklists");

        btnDate.setText("...");
        btnDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDateActionPerformed(evt);
            }
        });

        status.add(rbOverdue);
        rbOverdue.setForeground(new java.awt.Color(255, 255, 255));
        rbOverdue.setText("Overdue");
        rbOverdue.setName("Overdue"); // NOI18N
        rbOverdue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOverdueActionPerformed(evt);
            }
        });

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        pnChecklists.setBackground(new java.awt.Color(27, 24, 55));
        pnChecklists.setLayout(new java.awt.GridLayout(0, 1));

        tvDeadline1.setForeground(new java.awt.Color(255, 255, 255));
        tvDeadline1.setText("Deadline");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnRootLayout = new javax.swing.GroupLayout(pnRoot);
        pnRoot.setLayout(pnRootLayout);
        pnRootLayout.setHorizontalGroup(
            pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRootLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addComponent(tvDeadline)
                        .addGap(34, 34, 34)
                        .addComponent(pnChecklists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addComponent(tvDeadline1)
                        .addGap(39, 39, 39)
                        .addComponent(edtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDate))
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addComponent(tvTitle)
                        .addGap(24, 24, 24)
                        .addComponent(edtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addComponent(tvType)
                        .addGap(61, 61, 61)
                        .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addComponent(tvPriority)
                        .addGap(49, 49, 49)
                        .addComponent(tvTitle4)
                        .addGap(6, 6, 6)
                        .addComponent(sdPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(tvTitle5))
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addComponent(tvStatus)
                        .addGap(55, 55, 55)
                        .addComponent(rbOngoing)
                        .addGap(12, 12, 12)
                        .addComponent(rbCompleted)
                        .addGap(12, 12, 12)
                        .addComponent(rbOverdue)))
                .addGap(0, 31, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnRootLayout.createSequentialGroup()
                .addGroup(pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCreate)))
                .addGap(72, 72, 72))
        );
        pnRootLayout.setVerticalGroup(
            pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRootLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(tvTitle))
                    .addComponent(edtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(tvType))
                    .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sdPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tvPriority)
                            .addComponent(tvTitle4)
                            .addComponent(tvTitle5))))
                .addGap(15, 15, 15)
                .addGroup(pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(tvStatus))
                    .addComponent(rbOngoing)
                    .addComponent(rbCompleted)
                    .addComponent(rbOverdue))
                .addGap(12, 12, 12)
                .addGroup(pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnRootLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(tvDeadline1))
                    .addComponent(edtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDate))
                .addGap(22, 22, 22)
                .addGroup(pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tvDeadline)
                    .addComponent(pnChecklists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(pnRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnCancel))
                .addGap(61, 61, 61))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbOngoingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOngoingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbOngoingActionPerformed

    private void rbCompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCompletedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbCompletedActionPerformed

    private void btnDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDateActionPerformed
        // TODO add your handling code here:
        dateChooser.showPopup();
    }//GEN-LAST:event_btnDateActionPerformed

    private void rbOverdueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOverdueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbOverdueActionPerformed

    private void pnRootMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnRootMouseClicked
        // TODO add your handling code here:
        dateChooser.hidePopup();
    }//GEN-LAST:event_pnRootMouseClicked

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        rbOngoing.setActionCommand("Ongoing");
        rbCompleted.setActionCommand("Completed");
        rbOverdue.setActionCommand("Overdue");
        if (project != null) {
            ProjectAction.updateProject(project.getId(), edtTitle.getText(),
                    (String) cbType.getSelectedItem(), sdPriority.getValue(), edtDate.getText() + " 00:00:00", status.getSelection().getActionCommand());
            checkBoxMap.compareCheckBoxes(newCheckBoxMap);
            homepage.updateProjects();
            this.dispose();
        }
        if (edtTitle.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please input the project title.");
        } else {
            ProjectAction.createProject(user.loadUserInfo(), edtTitle.getText(),
                    (String) cbType.getSelectedItem(), sdPriority.getValue(),
                    edtDate.getText() + " 00:00:00", status.getSelection().getActionCommand());
            int projId = ProjectAction.getIdFromDb(edtTitle.getText(), user.loadUserInfo());
            checkBoxMap.setProjectId(projId);
            if (!newCheckBoxMap.isEmpty()) {
                for (Map.Entry<String, Boolean> entry : newCheckBoxMap.entrySet()) {
                    checkBoxMap.createCheckBox(entry.getKey(), entry.getValue());
                }
            }
            homepage.updateProjects();
            this.dispose();
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String name = JOptionPane.showInputDialog(this, "Enter checkbox label:");
        if (name != null && !name.isEmpty()) {
            boolean exists = false;
            if (checkBoxMap.getCheckBoxMap().containsKey(name) || newCheckBoxMap.containsKey(name)) {
                JOptionPane.showMessageDialog(this, "Checkbox with the same label already exists!");
                return;
            }
            if (!exists) {
                displayCheckBox(name);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Empty Checkbox cannot be made");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void displayCheckBox(String name) {
        JCheckBox checkBox = new JCheckBox(name);
        checkBox.setForeground(Color.WHITE);
        newCheckBoxMap.put(name, false); // Set default state to unchecked
        checkBox.addActionListener((ActionEvent e) -> {
            JCheckBox source = (JCheckBox) e.getSource();
            newCheckBoxMap.put(source.getText(), source.isSelected());
        });
        pnChecklists.add(checkBox);
        pnChecklists.revalidate();
        pnChecklists.repaint();
    }

    private void displayCheckBox(String name, boolean status) {
        JCheckBox checkBox = new JCheckBox(name);
        if (status) {
            checkBox.setSelected(true);
        }
        checkBox.setForeground(Color.WHITE);
        checkBoxMap.addCheckBox(name, status); // Set default state to unchecked
        checkBox.addActionListener((ActionEvent e) -> {
            JCheckBox source = (JCheckBox) e.getSource();
            updateCheckboxValue(source.getText(), source.isSelected());
        });
        pnChecklists.add(checkBox);
        pnChecklists.revalidate();
        pnChecklists.repaint();
    }

    private void updateCheckboxValue(String name, boolean value) {
        newCheckBoxMap.put(name, value);
    }
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(null, "Are you sure you want to clear?", "Confirm Clear", JOptionPane.YES_NO_OPTION);

        if (confirmation == JOptionPane.YES_OPTION) {
            newCheckBoxMap.clear();
            checkBoxMap.getCheckBoxes();
            pnChecklists.removeAll();
            pnChecklists.revalidate();
            pnChecklists.repaint();
        }
    }//GEN-LAST:event_btnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDate;
    private javax.swing.JComboBox<String> cbType;
    private datechooser.DateChooser dateChooser;
    private javax.swing.JTextField edtDate;
    private javax.swing.JTextField edtTitle;
    private javax.swing.JPanel pnChecklists;
    private javax.swing.JPanel pnRoot;
    private javax.swing.JRadioButton rbCompleted;
    private javax.swing.JRadioButton rbOngoing;
    private javax.swing.JRadioButton rbOverdue;
    private javax.swing.JSlider sdPriority;
    private javax.swing.ButtonGroup status;
    private javax.swing.JLabel tvDeadline;
    private javax.swing.JLabel tvDeadline1;
    private javax.swing.JLabel tvPriority;
    private javax.swing.JLabel tvStatus;
    private javax.swing.JLabel tvTitle;
    private javax.swing.JLabel tvTitle4;
    private javax.swing.JLabel tvTitle5;
    private javax.swing.JLabel tvType;
    // End of variables declaration//GEN-END:variables
}
